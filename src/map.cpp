#include "map.h"
QPoint cell_xy[130];

Map::Map(QGraphicsScene* scene, MainWindow* window, int map_kind) : Qneed(scene, window)
{
  loadImage(":images/ingame/map/map_background.png");
  map_xyInit();
  this->scene = scene;
  this->window = window;
  switch(map_kind)
    {
      case 1:
        mapInit1();
        break;
      case 2:
        mapInit2();
        break;
      case 3:
        mapInit3();
        break;
    }
}
void Map::mapInit1()
{
    cell[	1	]=new 	Unit	(this, 	1	);
    cell[	2	]=new 	Block	(this, 	2	, 	true,	NULL);
    cell[	3	]=new 	Block	(this, 	3	, 	true,	NULL);
    cell[	4	]=new 	Block	(this, 	4	, 	true,	NULL);
    cell[	5	]=new 	Block	(this, 	5	, 	true,	NULL);
    cell[	6	]=new 	Unit	(this, 	6	);
    cell[	7	]=new 	Unit	(this, 	7	);
    cell[	8	]=new 	Block	(this, 	8	, 	true,	NULL);
    cell[	9	]=new 	Block	(this, 	9	, 	true,	NULL);
    cell[	10	]=new 	Block	(this, 	10	, 	true,	NULL);
    cell[	11	]=new 	Unit	(this, 	11	);
    cell[	12	]=new 	Unit	(this, 	12	);
    cell[	13	]=new 	Unit	(this, 	13	);
    cell[	14	]=new 	Block	(this, 	14	, 	false,	NULL);
    cell[	15	]=new 	Block	(this, 	15	, 	true,	NULL);
    cell[	16	]=new 	Block	(this, 	16	, 	false,	NULL);
    cell[	17	]=new 	Block	(this, 	17	, 	true,	NULL);
    cell[	18	]=new 	Block	(this, 	18	, 	false,	NULL);
    cell[	19	]=new 	Block	(this, 	19	, 	true,	NULL);
    cell[	20	]=new 	Unit	(this, 	20	);
    cell[	21	]=new 	Block	(this, 	21	, 	false,	NULL);
    cell[	22	]=new 	Block	(this, 	22	, 	true,	NULL);
    cell[	23	]=new 	Block	(this, 	23	, 	false,	NULL);
    cell[	24	]=new 	Block	(this, 	24	, 	true,	NULL);
    cell[	25	]=new 	Unit	(this, 	25	);
    cell[	26	]=new 	Block	(this, 	26	, 	true,	NULL);
    cell[	27	]=new 	Block	(this, 	27	, 	true,	NULL);
    cell[	28	]=new 	Block	(this, 	28	, 	true,	NULL);
    cell[	29	]=new 	Block	(this, 	29	, 	true,	NULL);
    cell[	30	]=new 	Block	(this, 	30	, 	true,	NULL);
    cell[	31	]=new 	Block	(this, 	31	, 	true,	NULL);
    cell[	32	]=new 	Block	(this, 	32	, 	true,	NULL);
    cell[	33	]=new 	Block	(this, 	33	, 	true,	NULL);
    cell[	34	]=new 	Block	(this, 	34	, 	true,	NULL);
    cell[	35	]=new 	Block	(this, 	35	, 	true,	NULL);
    cell[	36	]=new 	Block	(this, 	36	, 	true,	NULL);
    cell[	37	]=new 	Block	(this, 	37	, 	true,	NULL);
    cell[	38	]=new 	Block	(this, 	38	, 	true,	NULL);
    cell[	39	]=new 	Block	(this, 	39	, 	true,	NULL);
    cell[	40	]=new 	Block	(this, 	40	, 	false,	NULL);
    cell[	41	]=new 	Block	(this, 	41	, 	true,	NULL);
    cell[	42	]=new 	Block	(this, 	42	, 	false,	NULL);
    cell[	43	]=new 	Block	(this, 	43	, 	false,	NULL);
    cell[	44	]=new 	Unit	(this, 	44	);
    cell[	45	]=new 	Block	(this, 	45	, 	false,	NULL);
    cell[	46	]=new 	Block	(this, 	46	, 	false,	NULL);
    cell[	47	]=new 	Block	(this, 	47	, 	false,	NULL);
    cell[	48	]=new 	Block	(this, 	48	, 	false,	NULL);
    cell[	49	]=new 	Block	(this, 	49	, 	true,	NULL);
    cell[	50	]=new 	Block	(this, 	50	, 	false,	NULL);
    cell[	51	]=new 	Block	(this, 	51	, 	true,	NULL);
    cell[	52	]=new 	Unit	(this, 	52	);
    cell[	53	]=new 	Unit	(this, 	53	);
    cell[	54	]=new 	Block	(this, 	54	, 	true,	NULL);
    cell[	55	]=new 	Block	(this, 	55	, 	false,	NULL);
    cell[	56	]=new 	Block	(this, 	56	, 	true,	NULL);
    cell[	57	]=new 	Unit	(this, 	57	);
    cell[	58	]=new 	Unit	(this, 	58	);
    cell[	59	]=new 	Unit	(this, 	59	);
    cell[	60	]=new 	Unit	(this, 	60	);
    cell[	61	]=new 	Block	(this, 	61	, 	false,	NULL);
    cell[	62	]=new 	Block	(this, 	62	, 	true,	NULL);
    cell[	63	]=new 	Block	(this, 	63	, 	true,	NULL);
    cell[	64	]=new 	Unit	(this, 	64	);
    cell[	65	]=new 	Unit	(this, 	65	);
    cell[	66	]=new 	Block	(this, 	66	, 	true,	NULL);
    cell[	67	]=new 	Block	(this, 	67	, 	true,	NULL);
    cell[	68	]=new 	Block	(this, 	68	, 	false,	NULL);
    cell[	69	]=new 	Unit	(this, 	69	);
    cell[	70	]=new 	Unit	(this, 	70	);
    cell[	71	]=new 	Unit	(this, 	71	);
    cell[	72	]=new 	Unit	(this, 	72	);
    cell[	73	]=new 	Block	(this, 	73	, 	true,	NULL);
    cell[	74	]=new 	Block	(this, 	74	, 	false,	NULL);
    cell[	75	]=new 	Block	(this, 	75	, 	true,	NULL);
    cell[	76	]=new 	Unit	(this, 	76	);
    cell[	77	]=new 	Unit	(this, 	77	);
    cell[	78	]=new 	Block	(this, 	78	, 	true,	NULL);
    cell[	79	]=new 	Block	(this, 	79	, 	false,	NULL);
    cell[	80	]=new 	Block	(this, 	80	, 	true,	NULL);
    cell[	81	]=new 	Block	(this, 	81	, 	false,	NULL);
    cell[	82	]=new 	Block	(this, 	82	, 	false,	NULL);
    cell[	83	]=new 	Block	(this, 	83	, 	false,	NULL);
    cell[	84	]=new 	Block	(this, 	84	, 	false,	NULL);
    cell[	85	]=new 	Unit	(this, 	85	);
    cell[	86	]=new 	Block	(this, 	86	, 	false,	NULL);
    cell[	87	]=new 	Block	(this, 	87	, 	false,	NULL);
    cell[	88	]=new 	Block	(this, 	88	, 	true,	NULL);
    cell[	89	]=new 	Block	(this, 	89	, 	false,	NULL);
    cell[	90	]=new 	Block	(this, 	90	, 	true,	NULL);
    cell[	91	]=new 	Block	(this, 	91	, 	true,	NULL);
    cell[	92	]=new 	Block	(this, 	92	, 	true,	NULL);
    cell[	93	]=new 	Block	(this, 	93	, 	true,	NULL);
    cell[	94	]=new 	Block	(this, 	94	, 	true,	NULL);
    cell[	95	]=new 	Block	(this, 	95	, 	true,	NULL);
    cell[	96	]=new 	Block	(this, 	96	, 	true,	NULL);
    cell[	97	]=new 	Block	(this, 	97	, 	true,	NULL);
    cell[	98	]=new 	Block	(this, 	98	, 	true,	NULL);
    cell[	99	]=new 	Block	(this, 	99	, 	true,	NULL);
    cell[	100	]=new 	Block	(this, 	100	, 	true,	NULL);
    cell[	101	]=new 	Block	(this, 	101	, 	true,	NULL);
    cell[	102	]=new 	Block	(this, 	102	, 	true,	NULL);
    cell[	103	]=new 	Block	(this, 	103	, 	true,	NULL);
    cell[	104	]=new 	Unit	(this, 	104	);
    cell[	105	]=new 	Block	(this, 	105	, 	false,	NULL);
    cell[	106	]=new 	Block	(this, 	106	, 	true,	NULL);
    cell[	107	]=new 	Block	(this, 	107	, 	false,	NULL);
    cell[	108	]=new 	Block	(this, 	108	, 	true,	NULL);
    cell[	109	]=new 	Block	(this, 	109	, 	false,	NULL);
    cell[	110	]=new 	Unit	(this, 	110	);
    cell[	111	]=new 	Block	(this, 	111	, 	false,	NULL);
    cell[	112	]=new 	Block	(this, 	112	, 	true,	NULL);
    cell[	113	]=new 	Block	(this, 	113	, 	false,	NULL);
    cell[	114	]=new 	Block	(this, 	114	, 	true,	NULL);
    cell[	115	]=new 	Block	(this, 	115	, 	false,	NULL);
    cell[	116	]=new 	Unit	(this, 	116	);
    cell[	117	]=new 	Unit	(this, 	117	);
    cell[	118	]=new 	Unit	(this, 	118	);
    cell[	119	]=new 	Block	(this, 	119	, 	true,	NULL);
    cell[	120	]=new 	Block	(this, 	120	, 	true,	NULL);
    cell[	121	]=new 	Block	(this, 	121	, 	true,	NULL);
    cell[	122	]=new 	Block	(this, 	122	, 	true,	NULL);
    cell[	123	]=new 	Unit	(this, 	123	);
    cell[	124	]=new 	Unit	(this, 	124	);
    cell[	125	]=new 	Block	(this, 	125	, 	true,	NULL);
    cell[	126	]=new 	Block	(this, 	126	, 	true,	NULL);
    cell[	127	]=new 	Block	(this, 	127	, 	true,	NULL);
    cell[	128	]=new 	Unit	(this, 	128	);

  cell[0] = ChoiceScene::get_ChoiceScene()->player1;
  cell[0] -> setParent(this);
  dynamic_cast<Character*>(cell[0])->setPosition(0);
  cell[129] = ChoiceScene::get_ChoiceScene()->player2;
  cell[129] -> setParent(this);
  dynamic_cast<Character*>(cell[129])->setPosition(129);

}

void Map::mapInit2()
{
    cell[	1	]=new 	Unit	(this, 	1	);
    cell[	2	]=new 	Block	(this, 	2	, 	true,	NULL);
    cell[	3	]=new 	Block	(this, 	3	, 	true,	NULL);
    cell[	4	]=new 	Block	(this, 	4	, 	true,	NULL);
    cell[	5	]=new 	Block	(this, 	5	, 	true,	NULL);
    cell[	6	]=new 	Block	(this, 	6	, 	true,	NULL);
    cell[	7	]=new 	Block	(this, 	7	, 	true,	NULL);
    cell[	8	]=new 	Block	(this, 	8	, 	true,	NULL);
    cell[	9	]=new 	Block	(this, 	9	, 	true,	NULL);
    cell[	10	]=new 	Block	(this, 	10	, 	true,	NULL);
    cell[	11	]=new 	Unit	(this, 	11	);
    cell[	12	]=new 	Unit	(this, 	12	);
    cell[	13	]=new 	Unit	(this, 	13	);
    cell[	14	]=new 	Block	(this, 	14	, 	false,	NULL);
    cell[	15	]=new 	Block	(this, 	15	, 	false,	NULL);
    cell[	16	]=new 	Block	(this, 	16	, 	false,	NULL);
    cell[	17	]=new 	Block	(this, 	17	, 	true,	NULL);
    cell[	18	]=new 	Block	(this, 	18	, 	false,	NULL);
    cell[	19	]=new 	Block	(this, 	19	, 	false,	NULL);
    cell[	20	]=new 	Block	(this, 	20	, 	false,	NULL);
    cell[	21	]=new 	Block	(this, 	21	, 	true,	NULL);
    cell[	22	]=new 	Block	(this, 	22	, 	false,	NULL);
    cell[	23	]=new 	Block	(this, 	23	, 	false,	NULL);
    cell[	24	]=new 	Block	(this, 	24	, 	false,	NULL);
    cell[	25	]=new 	Unit	(this, 	25	);
    cell[	26	]=new 	Block	(this, 	26	, 	true,	NULL);
    cell[	27	]=new 	Block	(this, 	27	, 	false,	NULL);
    cell[	28	]=new 	Block	(this, 	28	, 	true,	NULL);
    cell[	29	]=new 	Block	(this, 	29	, 	false,	NULL);
    cell[	30	]=new 	Block	(this, 	30	, 	true,	NULL);
    cell[	31	]=new 	Block	(this, 	31	, 	false,	NULL);
    cell[	32	]=new 	Block	(this, 	32	, 	true,	NULL);
    cell[	33	]=new 	Block	(this, 	33	, 	false,	NULL);
    cell[	34	]=new 	Block	(this, 	34	, 	true,	NULL);
    cell[	35	]=new 	Block	(this, 	35	, 	false,	NULL);
    cell[	36	]=new 	Block	(this, 	36	, 	true,	NULL);
    cell[	37	]=new 	Block	(this, 	37	, 	false,	NULL);
    cell[	38	]=new 	Block	(this, 	38	, 	true,	NULL);
    cell[	39	]=new 	Block	(this, 	39	, 	true,	NULL);
    cell[	40	]=new 	Block	(this, 	40	, 	false,	NULL);
    cell[	41	]=new 	Block	(this, 	41	, 	true,	NULL);
    cell[	42	]=new 	Block	(this, 	42	, 	true,	NULL);
    cell[	43	]=new 	Block	(this, 	43	, 	true,	NULL);
    cell[	44	]=new 	Block	(this, 	44	, 	true,	NULL);
    cell[	45	]=new 	Block	(this, 	45	, 	true,	NULL);
    cell[	46	]=new 	Block	(this, 	46	, 	true,	NULL);
    cell[	47	]=new 	Block	(this, 	47	, 	true,	NULL);
    cell[	48	]=new 	Block	(this, 	48	, 	true,	NULL);
    cell[	49	]=new 	Block	(this, 	49	, 	true,	NULL);
    cell[	50	]=new 	Block	(this, 	50	, 	false,	NULL);
    cell[	51	]=new 	Block	(this, 	51	, 	true,	NULL);
    cell[	52	]=new 	Block	(this, 	52	, 	true,	NULL);
    cell[	53	]=new 	Block	(this, 	53	, 	true,	NULL);
    cell[	54	]=new 	Block	(this, 	54	, 	true,	NULL);
    cell[	55	]=new 	Block	(this, 	55	, 	false,	NULL);
    cell[	56	]=new 	Block	(this, 	56	, 	true,	NULL);
    cell[	57	]=new 	Block	(this, 	57	, 	true,	NULL);
    cell[	58	]=new 	Block	(this, 	58	, 	false,	NULL);
    cell[	59	]=new 	Block	(this, 	59	, 	true,	NULL);
    cell[	60	]=new 	Block	(this, 	60	, 	true,	NULL);
    cell[	61	]=new 	Block	(this, 	61	, 	false,	NULL);
    cell[	62	]=new 	Block	(this, 	62	, 	true,	NULL);
    cell[	63	]=new 	Block	(this, 	63	, 	true,	NULL);
    cell[	64	]=new 	Block	(this, 	64	, 	true,	NULL);
    cell[	65	]=new 	Block	(this, 	65	, 	true,	NULL);
    cell[	66	]=new 	Block	(this, 	66	, 	true,	NULL);
    cell[	67	]=new 	Block	(this, 	67	, 	true,	NULL);
    cell[	68	]=new 	Block	(this, 	68	, 	false,	NULL);
    cell[	69	]=new 	Block	(this, 	69	, 	true,	NULL);
    cell[	70	]=new 	Block	(this, 	70	, 	true,	NULL);
    cell[	71	]=new 	Block	(this, 	71	, 	false,	NULL);
    cell[	72	]=new 	Block	(this, 	72	, 	true,	NULL);
    cell[	73	]=new 	Block	(this, 	73	, 	true,	NULL);
    cell[	74	]=new 	Block	(this, 	74	, 	false,	NULL);
    cell[	75	]=new 	Block	(this, 	75	, 	true,	NULL);
    cell[	76	]=new 	Block	(this, 	76	, 	true,	NULL);
    cell[	77	]=new 	Block	(this, 	77	, 	true,	NULL);
    cell[	78	]=new 	Block	(this, 	78	, 	true,	NULL);
    cell[	79	]=new 	Block	(this, 	79	, 	false,	NULL);
    cell[	80	]=new 	Block	(this, 	80	, 	true,	NULL);
    cell[	81	]=new 	Block	(this, 	81	, 	true,	NULL);
    cell[	82	]=new 	Block	(this, 	82	, 	true,	NULL);
    cell[	83	]=new 	Block	(this, 	83	, 	true,	NULL);
    cell[	84	]=new 	Block	(this, 	84	, 	true,	NULL);
    cell[	85	]=new 	Block	(this, 	85	, 	true,	NULL);
    cell[	86	]=new 	Block	(this, 	86	, 	true,	NULL);
    cell[	87	]=new 	Block	(this, 	87	, 	true,	NULL);
    cell[	88	]=new 	Block	(this, 	88	, 	true,	NULL);
    cell[	89	]=new 	Block	(this, 	89	, 	false,	NULL);
    cell[	90	]=new 	Block	(this, 	90	, 	true,	NULL);
    cell[	91	]=new 	Block	(this, 	91	, 	true,	NULL);
    cell[	92	]=new 	Block	(this, 	92	, 	false,	NULL);
    cell[	93	]=new 	Block	(this, 	93	, 	true,	NULL);
    cell[	94	]=new 	Block	(this, 	94	, 	false,	NULL);
    cell[	95	]=new 	Block	(this, 	95	, 	true,	NULL);
    cell[	96	]=new 	Block	(this, 	96	, 	false,	NULL);
    cell[	97	]=new 	Block	(this, 	97	, 	true,	NULL);
    cell[	98	]=new 	Block	(this, 	98	, 	false,	NULL);
    cell[	99	]=new 	Block	(this, 	99	, 	true,	NULL);
    cell[	100	]=new 	Block	(this, 	100	, 	false,	NULL);
    cell[	101	]=new 	Block	(this, 	101	, 	true,	NULL);
    cell[	102	]=new 	Block	(this, 	102	, 	false,	NULL);
    cell[	103	]=new 	Block	(this, 	103	, 	true,	NULL);
    cell[	104	]=new 	Unit	(this, 	104	);
    cell[	105	]=new 	Block	(this, 	105	, 	false,	NULL);
    cell[	106	]=new 	Block	(this, 	106	, 	false,	NULL);
    cell[	107	]=new 	Block	(this, 	107	, 	false,	NULL);
    cell[	108	]=new 	Block	(this, 	108	, 	true,	NULL);
    cell[	109	]=new 	Block	(this, 	109	, 	false,	NULL);
    cell[	110	]=new 	Block	(this, 	110	, 	false,	NULL);
    cell[	111	]=new 	Block	(this, 	111	, 	false,	NULL);
    cell[	112	]=new 	Block	(this, 	112	, 	true,	NULL);
    cell[	113	]=new 	Block	(this, 	113	, 	false,	NULL);
    cell[	114	]=new 	Block	(this, 	114	, 	false,	NULL);
    cell[	115	]=new 	Block	(this, 	115	, 	false,	NULL);
    cell[	116	]=new 	Unit	(this, 	116	);
    cell[	117	]=new 	Unit	(this, 	117	);
    cell[	118	]=new 	Unit	(this, 	118	);
    cell[	119	]=new 	Block	(this, 	119	, 	true,	NULL);
    cell[	120	]=new 	Block	(this, 	120	, 	true,	NULL);
    cell[	121	]=new 	Block	(this, 	121	, 	true,	NULL);
    cell[	122	]=new 	Block	(this, 	122	, 	true,	NULL);
    cell[	123	]=new 	Block	(this, 	123	, 	true,	NULL);
    cell[	124	]=new 	Block	(this, 	124	, 	true,	NULL);
    cell[	125	]=new 	Block	(this, 	125	, 	true,	NULL);
    cell[	126	]=new 	Block	(this, 	126	, 	true,	NULL);
    cell[	127	]=new 	Block	(this, 	127	, 	true,	NULL);
    cell[	128	]=new 	Unit	(this, 	128	);

    cell[0] = ChoiceScene::get_ChoiceScene()->player1;
    cell[0] -> setParent(this);
    dynamic_cast<Character*>(cell[0])->setPosition(0);
    cell[129] = ChoiceScene::get_ChoiceScene()->player2;
    cell[129] -> setParent(this);
    dynamic_cast<Character*>(cell[129])->setPosition(129);
}

void Map::mapInit3()
{
    cell[	1	]=new 	Unit	(this, 	1	);
    cell[	2	]=new 	Block	(this, 	2	, 	true,	NULL);
    cell[	3	]=new 	Block	(this, 	3	, 	true,	NULL);
    cell[	4	]=new 	Block	(this, 	4	, 	false,	NULL);
    cell[	5	]=new 	Block	(this, 	5	, 	true,	NULL);
    cell[	6	]=new 	Block	(this, 	6	, 	true,	NULL);
    cell[	7	]=new 	Block	(this, 	7	, 	true,	NULL);
    cell[	8	]=new 	Block	(this, 	8	, 	false,	NULL);
    cell[	9	]=new 	Block	(this, 	9	, 	true,	NULL);
    cell[	10	]=new 	Block	(this, 	10	, 	true,	NULL);
    cell[	11	]=new 	Unit	(this, 	11	);
    cell[	12	]=new 	Unit	(this, 	12	);
    cell[	13	]=new 	Unit	(this, 	13	);
    cell[	14	]=new 	Block	(this, 	14	, 	true,	NULL);
    cell[	15	]=new 	Block	(this, 	15	, 	false,	NULL);
    cell[	16	]=new 	Block	(this, 	16	, 	true,	NULL);
    cell[	17	]=new 	Block	(this, 	17	, 	false,	NULL);
    cell[	18	]=new 	Block	(this, 	18	, 	true,	NULL);
    cell[	19	]=new 	Block	(this, 	19	, 	true,	NULL);
    cell[	20	]=new 	Block	(this, 	20	, 	true,	NULL);
    cell[	21	]=new 	Block	(this, 	21	, 	false,	NULL);
    cell[	22	]=new 	Block	(this, 	22	, 	true,	NULL);
    cell[	23	]=new 	Block	(this, 	23	, 	false,	NULL);
    cell[	24	]=new 	Block	(this, 	24	, 	true,	NULL);
    cell[	25	]=new 	Block	(this, 	25	, 	true,	NULL);
    cell[	26	]=new 	Block	(this, 	26	, 	true,	NULL);
    cell[	27	]=new 	Block	(this, 	27	, 	true,	NULL);
    cell[	28	]=new 	Block	(this, 	28	, 	true,	NULL);
    cell[	29	]=new 	Block	(this, 	29	, 	true,	NULL);
    cell[	30	]=new 	Block	(this, 	30	, 	false,	NULL);
    cell[	31	]=new 	Block	(this, 	31	, 	true,	NULL);
    cell[	32	]=new 	Block	(this, 	32	, 	true,	NULL);
    cell[	33	]=new 	Block	(this, 	33	, 	true,	NULL);
    cell[	34	]=new 	Block	(this, 	34	, 	false,	NULL);
    cell[	35	]=new 	Block	(this, 	35	, 	true,	NULL);
    cell[	36	]=new 	Block	(this, 	36	, 	true,	NULL);
    cell[	37	]=new 	Block	(this, 	37	, 	true,	NULL);
    cell[	38	]=new 	Block	(this, 	38	, 	true,	NULL);
    cell[	39	]=new 	Block	(this, 	39	, 	false,	NULL);
    cell[	40	]=new 	Block	(this, 	40	, 	true,	NULL);
    cell[	41	]=new 	Block	(this, 	41	, 	false,	NULL);
    cell[	42	]=new 	Block	(this, 	42	, 	true,	NULL);
    cell[	43	]=new 	Block	(this, 	43	, 	true,	NULL);
    cell[	44	]=new 	Block	(this, 	44	, 	true,	NULL);
    cell[	45	]=new 	Block	(this, 	45	, 	true,	NULL);
    cell[	46	]=new 	Block	(this, 	46	, 	true,	NULL);
    cell[	47	]=new 	Block	(this, 	47	, 	true,	NULL);
    cell[	48	]=new 	Block	(this, 	48	, 	true,	NULL);
    cell[	49	]=new 	Block	(this, 	49	, 	false,	NULL);
    cell[	50	]=new 	Block	(this, 	50	, 	true,	NULL);
    cell[	51	]=new 	Block	(this, 	51	, 	false,	NULL);
    cell[	52	]=new 	Block	(this, 	52	, 	false,	NULL);
    cell[	53	]=new 	Block	(this, 	53	, 	false,	NULL);
    cell[	54	]=new 	Block	(this, 	54	, 	false,	NULL);
    cell[	55	]=new 	Block	(this, 	55	, 	false,	NULL);
    cell[	56	]=new 	Block	(this, 	56	, 	false,	NULL);
    cell[	57	]=new 	Block	(this, 	57	, 	true,	NULL);
    cell[	58	]=new 	Block	(this, 	58	, 	true,	NULL);
    cell[	59	]=new 	Block	(this, 	59	, 	true,	NULL);
    cell[	60	]=new 	Block	(this, 	60	, 	false,	NULL);
    cell[	61	]=new 	Block	(this, 	61	, 	false,	NULL);
    cell[	62	]=new 	Block	(this, 	62	, 	false,	NULL);
    cell[	63	]=new 	Block	(this, 	63	, 	false,	NULL);
    cell[	64	]=new 	Block	(this, 	64	, 	false,	NULL);
    cell[	65	]=new 	Block	(this, 	65	, 	false,	NULL);
    cell[	66	]=new 	Block	(this, 	66	, 	false,	NULL);
    cell[	67	]=new 	Block	(this, 	67	, 	false,	NULL);
    cell[	68	]=new 	Block	(this, 	68	, 	false,	NULL);
    cell[	69	]=new 	Block	(this, 	69	, 	false,	NULL);
    cell[	70	]=new 	Block	(this, 	70	, 	true,	NULL);
    cell[	71	]=new 	Block	(this, 	71	, 	true,	NULL);
    cell[	72	]=new 	Block	(this, 	72	, 	true,	NULL);
    cell[	73	]=new 	Block	(this, 	73	, 	false,	NULL);
    cell[	74	]=new 	Block	(this, 	74	, 	false,	NULL);
    cell[	75	]=new 	Block	(this, 	75	, 	false,	NULL);
    cell[	76	]=new 	Block	(this, 	76	, 	false,	NULL);
    cell[	77	]=new 	Block	(this, 	77	, 	false,	NULL);
    cell[	78	]=new 	Block	(this, 	78	, 	false,	NULL);
    cell[	79	]=new 	Block	(this, 	79	, 	true,	NULL);
    cell[	80	]=new 	Block	(this, 	80	, 	false,	NULL);
    cell[	81	]=new 	Block	(this, 	81	, 	true,	NULL);
    cell[	82	]=new 	Block	(this, 	82	, 	true,	NULL);
    cell[	83	]=new 	Block	(this, 	83	, 	true,	NULL);
    cell[	84	]=new 	Block	(this, 	84	, 	true,	NULL);
    cell[	85	]=new 	Block	(this, 	85	, 	true,	NULL);
    cell[	86	]=new 	Block	(this, 	86	, 	true,	NULL);
    cell[	87	]=new 	Block	(this, 	87	, 	true,	NULL);
    cell[	88	]=new 	Block	(this, 	88	, 	false,	NULL);
    cell[	89	]=new 	Block	(this, 	89	, 	true,	NULL);
    cell[	90	]=new 	Block	(this, 	90	, 	false,	NULL);
    cell[	91	]=new 	Block	(this, 	91	, 	true,	NULL);
    cell[	92	]=new 	Block	(this, 	92	, 	true,	NULL);
    cell[	93	]=new 	Block	(this, 	93	, 	true,	NULL);
    cell[	94	]=new 	Block	(this, 	94	, 	true,	NULL);
    cell[	95	]=new 	Block	(this, 	95	, 	false,	NULL);
    cell[	96	]=new 	Block	(this, 	96	, 	true,	NULL);
    cell[	97	]=new 	Block	(this, 	97	, 	true,	NULL);
    cell[	98	]=new 	Block	(this, 	98	, 	true,	NULL);
    cell[	99	]=new 	Block	(this, 	99	, 	false,	NULL);
    cell[	100	]=new 	Block	(this, 	100	, 	true,	NULL);
    cell[	101	]=new 	Block	(this, 	101	, 	true,	NULL);
    cell[	102	]=new 	Block	(this, 	102	, 	true,	NULL);
    cell[	103	]=new 	Block	(this, 	103	, 	true,	NULL);
    cell[	104	]=new 	Unit	(this, 	104	);
    cell[	105	]=new 	Block	(this, 	105	, 	true,	NULL);
    cell[	106	]=new 	Block	(this, 	106	, 	false,	NULL);
    cell[	107	]=new 	Block	(this, 	107	, 	true,	NULL);
    cell[	108	]=new 	Block	(this, 	108	, 	false,	NULL);
    cell[	109	]=new 	Block	(this, 	109	, 	true,	NULL);
    cell[	110	]=new 	Block	(this, 	110	, 	true,	NULL);
    cell[	111	]=new 	Block	(this, 	111	, 	true,	NULL);
    cell[	112	]=new 	Block	(this, 	112	, 	false,	NULL);
    cell[	113	]=new 	Block	(this, 	113	, 	true,	NULL);
    cell[	114	]=new 	Block	(this, 	114	, 	false,	NULL);
    cell[	115	]=new 	Block	(this, 	115	, 	true,	NULL);
    cell[	116	]=new 	Unit	(this, 	116	);
    cell[	117	]=new 	Unit	(this, 	117	);
    cell[	118	]=new 	Unit	(this, 	118	);
    cell[	119	]=new 	Block	(this, 	119	, 	true,	NULL);
    cell[	120	]=new 	Block	(this, 	120	, 	true,	NULL);
    cell[	121	]=new 	Block	(this, 	121	, 	false,	NULL);
    cell[	122	]=new 	Block	(this, 	122	, 	true,	NULL);
    cell[	123	]=new 	Block	(this, 	123	, 	true,	NULL);
    cell[	124	]=new 	Block	(this, 	124	, 	true,	NULL);
    cell[	125	]=new 	Block	(this, 	125	, 	false,	NULL);
    cell[	126	]=new 	Block	(this, 	126	, 	true,	NULL);
    cell[	127	]=new 	Block	(this, 	127	, 	true,	NULL);
    cell[	128	]=new 	Unit	(this, 	128	);

    cell[0] = ChoiceScene::get_ChoiceScene()->player1;
    cell[0] -> setParent(this);
    dynamic_cast<Character*>(cell[0])->setPosition(0);
    cell[129] = ChoiceScene::get_ChoiceScene()->player2;
    cell[129] -> setParent(this);
    dynamic_cast<Character*>(cell[129])->setPosition(129);
}

void Map::map_xyInit()
{
  using namespace Map_xy;
   for(int i = 0; i < 10; i++)
  {
    for(int j = 0; j < 13; j++)

    {
      cell_xy[i*13 + j] = QPoint(j*cell_s, i*cell_s);
    }
  }
  for(int i = 0; i < 130; i++)
    cell[i] = NULL;
}

namespace Map_xy
{
  const int map_w = 57;
  const int map_h = 34;
  const int cell_s = 72;
}
